{"version":3,"sources":["pages/TransferLearning.tsx","pages/Home.tsx","pages/Webcam.tsx","pages/ImageDetection.tsx","routes/index.ts","components/Link/Link.tsx","components/Nav/Nav.tsx","App.tsx","reportWebVitals.ts","theme/index.ts","index.tsx"],"names":["raf","Home","p","Webcam","modelMobilenet","videoRef","useRef","useState","loading","setLoading","result","setResult","classify","useCallback","img","a","undefined","output","outputList","map","o","index","className","Math","round","probability","dispose","console","log","load","onCapture","current","data","webcam","capture","useEffect","loadCam","video","width","height","ref","onClick","variant","mt","ImageDetection","modelKnn","key","setKey","sx","onLoad","alt","crossOrigin","src","POSES","sort","b","localeCompare","Routes","path","component","name","exact","setWebcam","takingPictures","setTakingPictures","takenPoses","setTakenPoses","allPoses","setAllPoses","stopLoopDetection","window","cancelAnimationFrame","addExample","classId","i","activation","infer","nextFrame","poses","toString","loopDetection","getNumClasses","predictClass","mb","fontWeight","label","Object","keys","confidences","requestAnimationFrame","mx","textAlign","maxWidth","opacity","pointerEvents","justifyContent","CustomLink","ThemeUILink","Link","children","props","as","RouterLink","Nav","location","useLocation","px","py","bg","r","pathname","to","App","setModelMobilenet","setModelKnn","error","setError","loadModels","mobilenet","knn","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","theme","space","fonts","body","heading","monospace","fontSizes","fontWeights","bold","lineHeights","buttons","primary","cursor","secondary","color","colors","text","background","muted","links","nav","mr","navActive","styles","root","fontFamily","lineHeight","h1","fontSize","h2","h3","h4","h5","h6","pre","overflowX","code","table","borderCollapse","borderSpacing","th","borderBottomStyle","td","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c05e58a0.chunk.js","sourcesContent":["import { data, nextFrame } from '@tensorflow/tfjs'\nimport React, { useEffect, useRef, useState } from 'react'\nimport { Box, Text, Button, Flex } from 'theme-ui'\nimport { TFPage } from '../types'\n\nconst CAMERA_SCALE = 1.2\nconst POSES = ['left', 'up', 'down', 'center', 'right'].sort((a, b) => a.localeCompare(b))\nlet raf: number | undefined\n\nconst TransferLearning = ({ modelMobilenet, modelKnn }: TFPage) => {\n  const videoRef = useRef<HTMLVideoElement>(null)\n  const [webcam, setWebcam] = useState<any>()\n  const [result, setResult] = useState<JSX.Element>()\n  const [takingPictures, setTakingPictures] = useState<boolean>(false)\n  const [takenPoses, setTakenPoses] = useState<any[]>([])\n  const [allPoses, setAllPoses] = useState<boolean>(false)\n\n  useEffect(() => {\n    const loadCam = async (video: HTMLVideoElement) => {\n      setWebcam(await data.webcam(video))\n    }\n    if (videoRef.current) loadCam(videoRef.current)\n\n    return () => {\n      stopLoopDetection()\n    }\n  }, [videoRef])\n\n  const stopLoopDetection = () => {\n    if (raf) window.cancelAnimationFrame(raf)\n    raf = undefined\n  }\n\n  const addExample = async (classId: number | string) => {\n    setTakingPictures(true)\n    let i = 0\n\n    while (i < 15) {\n      const img = await webcam.capture()\n      const activation = modelMobilenet?.infer(img)\n\n      if (activation) modelKnn?.addExample(activation, classId)\n\n      img.dispose()\n      i++\n      await nextFrame()\n    }\n\n    const poses = [...takenPoses, classId].sort((a, b) => a.localeCompare(b))\n    setTakenPoses(poses)\n    setTakingPictures(false)\n\n    if (poses.toString() === POSES.toString()) {\n      setAllPoses(true)\n    }\n  }\n\n  const loopDetection = async () => {\n    if (!modelKnn) return\n    if (modelKnn.getNumClasses() > 0) {\n      const img = await webcam.capture()\n      const activation = modelMobilenet?.infer(img)\n      const result = await modelKnn?.predictClass(activation!)\n\n      setResult(\n        <Box>\n          <Box mb={2} sx={{ fontWeight: 'bold' }}>\n            {result.label}\n          </Box>\n          {Object.keys(result.confidences).map((a, index) => (\n            <Box key={index}>\n              {a}: {result.confidences[a]}\n            </Box>\n          ))}\n        </Box>\n      )\n\n      img.dispose()\n    }\n\n    raf = window.requestAnimationFrame(loopDetection)\n  }\n\n  const startLoopDetection = () => {\n    loopDetection()\n  }\n\n  return (\n    <Box p={4}>\n      <Box sx={{ mx: 'auto', textAlign: 'center', maxWidth: 640 * CAMERA_SCALE }}>\n        <Box>\n          <video width={640 * CAMERA_SCALE} height={480 * CAMERA_SCALE} ref={videoRef}></video>\n        </Box>\n        <Box\n          mt={3}\n          sx={{\n            opacity: takingPictures ? 0.5 : 1,\n            pointerEvents: takingPictures ? 'none' : 'visible',\n          }}\n        >\n          {!allPoses && (\n            <Box>\n              <Text>Teach the machine all angles of your face</Text>\n              <Flex sx={{ mt: 3, justifyContent: 'space-between' }}>\n                <Button onClick={() => addExample('left')} variant=\"secondary\">\n                  Left\n                </Button>\n                <Button onClick={() => addExample('up')} variant=\"secondary\">\n                  Up\n                </Button>\n                <Button onClick={() => addExample('center')} variant=\"secondary\">\n                  Center\n                </Button>\n                <Button onClick={() => addExample('down')} variant=\"secondary\">\n                  Down\n                </Button>\n                <Button onClick={() => addExample('right')} variant=\"secondary\">\n                  Right\n                </Button>\n              </Flex>\n            </Box>\n          )}\n          {allPoses && (\n            <Button onClick={startLoopDetection} mt={5}>\n              Detect head position\n            </Button>\n          )}\n        </Box>\n        <Box mt={3}>{result}</Box>\n      </Box>\n    </Box>\n  )\n}\n\nexport default TransferLearning\n","import { Box } from 'theme-ui'\n\nconst Home = () => {\n  return <Box p={4}>Choose one from the menu above</Box>\n}\n\nexport default Home\n","import { useCallback, useEffect, useRef, useState } from 'react'\nimport { data, Tensor3D } from '@tensorflow/tfjs'\nimport { Box, Button } from 'theme-ui'\nimport { TFPage } from '../types'\n\nconst CAMERA_SCALE = 1.2\n\nconst Webcam = ({ modelMobilenet }: TFPage) => {\n  const videoRef = useRef<HTMLVideoElement>(null)\n  const [loading, setLoading] = useState<boolean>(false)\n  const [result, setResult] = useState<JSX.Element[]>()\n\n  const classify = useCallback(\n    (img: Tensor3D) => {\n      const load = async (img: Tensor3D) => {\n        if (!modelMobilenet) {\n          setResult(undefined)\n          return\n        }\n\n        try {\n          setLoading(true)\n          const output = await modelMobilenet.classify(img)\n          const outputList = output.map((o, index) => (\n            <Box key={index}>\n              <b>{o.className}</b> - {`${Math.round(o.probability * 100)}%`}\n            </Box>\n          ))\n\n          setResult(outputList)\n          setLoading(false)\n\n          img.dispose()\n        } catch (e) {\n          setLoading(false)\n          setResult(undefined)\n          console.log(e)\n        }\n      }\n      load(img)\n    },\n    [modelMobilenet]\n  )\n\n  const onCapture = async () => {\n    if (!videoRef.current) return\n    try {\n      const webcam = await data.webcam(videoRef.current)\n      const img = await webcam.capture()\n      classify(img)\n    } catch (e) {\n      console.log(e)\n    }\n  }\n\n  useEffect(() => {\n    const loadCam = async (video: HTMLVideoElement) => {\n      await data.webcam(video)\n    }\n    if (videoRef.current) loadCam(videoRef.current)\n  }, [videoRef])\n\n  return (\n    <Box p={4}>\n      <Box>\n        <video width={640 * CAMERA_SCALE} height={480 * CAMERA_SCALE} ref={videoRef}></video>\n      </Box>\n      <Button onClick={onCapture} variant=\"primary\">\n        Capture\n      </Button>\n      {loading && <Box>loading</Box>}\n      {result && <Box mt={3}>{result}</Box>}\n    </Box>\n  )\n}\n\nexport default Webcam\n","import '@tensorflow/tfjs'\nimport { Box, Image, Button } from 'theme-ui'\nimport { useCallback, useRef, useState } from 'react'\nimport { TFPage } from '../types'\n\nconst ImageDetection = ({ modelMobilenet, modelKnn }: TFPage) => {\n  const ref = useRef<HTMLImageElement>(null)\n  const [loading, setLoading] = useState<boolean>(false)\n\n  const [key, setKey] = useState<number>(0)\n  const [result, setResult] = useState<JSX.Element[]>()\n\n  const classify = useCallback(\n    (img: HTMLImageElement) => {\n      const load = async (img: HTMLImageElement) => {\n        if (!modelMobilenet) {\n          setLoading(false)\n          setResult(undefined)\n          return\n        }\n\n        try {\n          setLoading(true)\n          const output = await modelMobilenet.classify(img)\n          const outputList = output.map((o, index) => (\n            <Box key={index}>\n              <b>{o.className}</b> - {`${Math.round(o.probability * 100)}%`}\n            </Box>\n          ))\n\n          setResult(outputList)\n          setLoading(false)\n        } catch (e) {\n          setLoading(false)\n          setResult(undefined)\n          console.log(e)\n        }\n      }\n      load(img)\n    },\n    [modelMobilenet]\n  )\n\n  const onLoadImage = () => {\n    if (ref.current) classify(ref.current)\n  }\n\n  return (\n    <Box p={4}>\n      {modelMobilenet && (\n        <Box sx={{ width: 1000 }}>\n          <Box sx={{ height: 700 }}>\n            <Image\n              onLoad={onLoadImage}\n              key={key}\n              ref={ref}\n              alt=\"cat\"\n              crossOrigin=\"anonymous\"\n              src=\"https://picsum.photos/1000/700\"\n            />\n          </Box>\n          <Box mt={3}>{loading ? 'loading' : result ? result : ''}</Box>\n          {!loading && (\n            <Button\n              mt={3}\n              variant=\"primary\"\n              onClick={() => {\n                setLoading(true)\n                setResult(undefined)\n                setKey(key + 1)\n              }}\n            >\n              reload\n            </Button>\n          )}\n        </Box>\n      )}\n    </Box>\n  )\n}\n\nexport default ImageDetection\n","import { Home, ImageDetection, TransferLearning, Webcam } from '../pages'\n\nconst Routes = [\n  {\n    path: '/',\n    component: Home,\n    name: 'Home',\n    exact: true,\n  },\n  {\n    path: '/tensorflow-study/image-detection',\n    component: ImageDetection,\n    name: 'Random Image Detection',\n  },\n  {\n    path: '/tensorflow-study/webcam',\n    component: Webcam,\n    name: 'Webcam',\n  },\n  {\n    path: '/tensorflow-study/transfer-learning',\n    component: TransferLearning,\n    name: 'Transfer Learning',\n  },\n]\n\nexport default Routes\n","import React, { RefAttributes, PropsWithoutRef, ForwardRefExoticComponent } from 'react'\nimport { Link as RouterLink, LinkProps as RouterLinkProps } from 'react-router-dom'\nimport { NavLink as ThemeUILink, NavLinkProps as ThemedUILinkProps } from 'theme-ui'\n\n/**\n * @see https://www.reactjunkie.com/theme-ui-react-router-link-typescript\n */\n\ntype ForwardRef<T, P> = ForwardRefExoticComponent<PropsWithoutRef<P> & RefAttributes<T>>\n\nexport type CustomLinkCombinedProps = ThemedUILinkProps & RouterLinkProps<{}>\nexport const CustomLink: ForwardRef<HTMLAnchorElement, CustomLinkCombinedProps> = ThemeUILink\n\nconst Link = ({ children, ...props }: CustomLinkCombinedProps) => {\n  return (\n    <CustomLink as={RouterLink} {...props}>\n      {children}\n    </CustomLink>\n  )\n}\n\nexport default Link\n","import { useLocation } from 'react-router-dom'\nimport { Flex } from 'theme-ui'\nimport { Link } from '..'\nimport Routes from '../../routes'\n\nconst Nav = () => {\n  const location = useLocation()\n\n  return (\n    <Flex as=\"nav\" sx={{ px: 3, py: 4, bg: 'muted' }}>\n      {Routes.map(r => (\n        <Link key={r.name} variant={location.pathname === r.path ? 'navActive' : 'nav'} to={r.path}>\n          {r.name}\n        </Link>\n      ))}\n    </Flex>\n  )\n}\n\nexport default Nav\n","import React, { useEffect, useState } from 'react'\nimport * as mobilenet from '@tensorflow-models/mobilenet'\nimport * as knn from '@tensorflow-models/knn-classifier'\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\nimport { Box } from 'theme-ui'\nimport Routes from './routes'\nimport { Nav } from './components'\n\nconst App = () => {\n  const [modelMobilenet, setModelMobilenet] = useState<mobilenet.MobileNet>()\n  const [modelKnn, setModelKnn] = useState<knn.KNNClassifier>()\n  const [error, setError] = useState<boolean>(false)\n  const loadModels = async () => {\n    try {\n      setModelMobilenet(await mobilenet.load())\n      setModelKnn(await knn.create())\n    } catch (e) {\n      console.log(e)\n      setError(true)\n    }\n  }\n\n  useEffect(() => {\n    loadModels()\n  }, [])\n\n  return (\n    <Router>\n      <Nav />\n      {error ? (\n        <Box p={3}>Error loading Model</Box>\n      ) : (\n        <>\n          {modelMobilenet && modelKnn ? (\n            <Switch>\n              {Routes.map(({ exact, path, component: Component }, index) => (\n                <Route exact={exact} key={index} path={path}>\n                  <Component modelMobilenet={modelMobilenet} modelKnn={modelKnn} />\n                </Route>\n              ))}\n            </Switch>\n          ) : (\n            <Box p={3}>Loading Models</Box>\n          )}\n        </>\n      )}\n    </Router>\n  )\n}\n\nexport default App\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { Theme } from 'theme-ui'\n\nconst theme: Theme = {\n  space: [0, 4, 8, 16, 32, 64, 128, 256, 512],\n  fonts: {\n    body:\n      'system-ui, -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, \"Helvetica Neue\", sans-serif',\n    heading: 'inherit',\n    monospace: 'Menlo, monospace',\n  },\n  fontSizes: [12, 14, 16, 20, 24, 32, 48, 64, 96],\n  fontWeights: {\n    body: 400,\n    heading: 700,\n    bold: 700,\n  },\n  lineHeights: {\n    body: 1.5,\n    heading: 1.125,\n  },\n  buttons: {\n    primary: {\n      cursor: 'pointer',\n    },\n    secondary: {\n      bg: 'secondary',\n      color: 'white',\n      cursor: 'pointer',\n    },\n  },\n  colors: {\n    text: '#000',\n    background: '#fff',\n    primary: '#07c',\n    secondary: '#30c',\n    muted: '#f6f6f6',\n  },\n  links: {\n    nav: {\n      mr: 4,\n    },\n    navActive: {\n      variant: 'links.nav',\n      color: 'secondary',\n      pointerEvents: 'none',\n    },\n  },\n  styles: {\n    root: {\n      fontFamily: 'body',\n      lineHeight: 'body',\n      fontWeight: 'body',\n    },\n    h1: {\n      color: 'text',\n      fontFamily: 'heading',\n      lineHeight: 'heading',\n      fontWeight: 'heading',\n      fontSize: 5,\n    },\n    h2: {\n      color: 'text',\n      fontFamily: 'heading',\n      lineHeight: 'heading',\n      fontWeight: 'heading',\n      fontSize: 4,\n    },\n    h3: {\n      color: 'text',\n      fontFamily: 'heading',\n      lineHeight: 'heading',\n      fontWeight: 'heading',\n      fontSize: 3,\n    },\n    h4: {\n      color: 'text',\n      fontFamily: 'heading',\n      lineHeight: 'heading',\n      fontWeight: 'heading',\n      fontSize: 2,\n    },\n    h5: {\n      color: 'text',\n      fontFamily: 'heading',\n      lineHeight: 'heading',\n      fontWeight: 'heading',\n      fontSize: 1,\n    },\n    h6: {\n      color: 'text',\n      fontFamily: 'heading',\n      lineHeight: 'heading',\n      fontWeight: 'heading',\n      fontSize: 0,\n    },\n    p: {\n      color: 'text',\n      fontFamily: 'body',\n      fontWeight: 'body',\n      lineHeight: 'body',\n    },\n    a: {\n      color: 'primary',\n    },\n    pre: {\n      fontFamily: 'monospace',\n      overflowX: 'auto',\n      code: {\n        color: 'inherit',\n      },\n    },\n    code: {\n      fontFamily: 'monospace',\n      fontSize: 'inherit',\n    },\n    table: {\n      width: '100%',\n      borderCollapse: 'separate',\n      borderSpacing: 0,\n    },\n    th: {\n      textAlign: 'left',\n      borderBottomStyle: 'solid',\n    },\n    td: {\n      textAlign: 'left',\n      borderBottomStyle: 'solid',\n    },\n    img: {\n      maxWidth: '100%',\n    },\n  },\n}\n\nexport default theme\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { ThemeProvider } from 'theme-ui'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\nimport theme from './theme'\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n      <App />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}