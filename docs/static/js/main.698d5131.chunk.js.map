{"version":3,"sources":["routes/index.ts","pages/ImageDetection.tsx","pages/Webcam.tsx","components/Link/Link.tsx","components/Nav/Nav.tsx","App.tsx","reportWebVitals.ts","theme/index.ts","index.tsx"],"names":["Routes","path","component","model","ref","useRef","useState","loading","setLoading","key","setKey","result","setResult","classify","useCallback","img","a","undefined","output","outputList","map","o","index","className","Math","round","probability","console","log","load","p","sx","width","height","onLoad","current","alt","crossOrigin","src","mt","variant","onClick","name","videoRef","dispose","onCapture","data","webcam","capture","useEffect","loadCam","video","CustomLink","ThemeUILink","Link","children","props","as","RouterLink","Nav","location","useLocation","px","py","bg","r","pathname","to","App","setModel","error","setError","loadModel","mobilenet","Component","replace","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","theme","space","fonts","body","heading","monospace","fontSizes","fontWeights","bold","lineHeights","colors","text","background","primary","secondary","muted","links","nav","mr","navActive","color","pointerEvents","styles","root","fontFamily","lineHeight","fontWeight","h1","fontSize","h2","h3","h4","h5","h6","pre","overflowX","code","table","borderCollapse","borderSpacing","th","textAlign","borderBottomStyle","td","maxWidth","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wVAeeA,EAbA,CACb,CACEC,KAAM,oBACNC,UCAmB,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,MAClBC,EAAMC,iBAAyB,MADO,EAEdC,oBAAkB,GAFJ,mBAErCC,EAFqC,KAE5BC,EAF4B,OAItBF,mBAAiB,GAJK,mBAIrCG,EAJqC,KAIhCC,EAJgC,OAKhBJ,qBALgB,mBAKrCK,EALqC,KAK7BC,EAL6B,KAOtCC,EAAWC,uBACf,SAACC,IACW,uCAAG,WAAOA,GAAP,iBAAAC,EAAA,yDACNb,EADM,uBAETK,GAAW,GACXI,OAAUK,GAHD,0CAQTT,GAAW,GARF,SASYL,EAAMU,SAASE,GAT3B,OASHG,EATG,OAUHC,EAAaD,EAAOE,KAAI,SAACC,EAAGC,GAAJ,OAC5B,eAAC,IAAD,WACE,4BAAID,EAAEE,YADR,gBAC6BC,KAAKC,MAAsB,IAAhBJ,EAAEK,aAD1C,OAAUJ,MAKZV,EAAUO,GACVX,GAAW,GAjBF,kDAmBTA,GAAW,GACXI,OAAUK,GACVU,QAAQC,IAAR,MArBS,0DAAH,sDAwBVC,CAAKd,KAEP,CAACZ,IAOH,OACE,cAAC,IAAD,CAAK2B,EAAG,EAAR,SACG3B,GACC,eAAC,IAAD,CAAK4B,GAAI,CAAEC,MAAO,KAAlB,UACE,cAAC,IAAD,CAAKD,GAAI,CAAEE,OAAQ,KAAnB,SACE,cAAC,IAAD,CACEC,OAVQ,WACd9B,EAAI+B,SAAStB,EAAST,EAAI+B,UAWpB/B,IAAKA,EACLgC,IAAI,MACJC,YAAY,YACZC,IAAI,kCAJC7B,KAOT,cAAC,IAAD,CAAK8B,GAAI,EAAT,SAAahC,EAAU,UAAYI,GAAkB,MACnDJ,GACA,cAAC,IAAD,CACEgC,GAAI,EACJC,QAAQ,UACRC,QAAS,WACPjC,GAAW,GACXI,OAAUK,GACVP,EAAOD,EAAM,IANjB,0BDzDRiC,KAAM,0BAER,CACEzC,KAAM,WACNC,UEHW,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,MACVwC,EAAWtC,iBAAyB,MADN,EAENC,oBAAkB,GAFZ,mBAE7BC,EAF6B,KAEpBC,EAFoB,OAGRF,qBAHQ,mBAG7BK,EAH6B,KAGrBC,EAHqB,KAK9BC,EAAWC,uBACf,SAACC,IACW,uCAAG,WAAOA,GAAP,iBAAAC,EAAA,yDACNb,EADM,uBAETS,OAAUK,GAFD,0CAOTT,GAAW,GAPF,SAQYL,EAAMU,SAASE,GAR3B,OAQHG,EARG,OASHC,EAAaD,EAAOE,KAAI,SAACC,EAAGC,GAAJ,OAC5B,eAAC,IAAD,WACE,4BAAID,EAAEE,YADR,gBAC6BC,KAAKC,MAAsB,IAAhBJ,EAAEK,aAD1C,OAAUJ,MAKZV,EAAUO,GACVX,GAAW,GAEXO,EAAI6B,UAlBK,kDAoBTpC,GAAW,GACXI,OAAUK,GACVU,QAAQC,IAAR,MAtBS,0DAAH,sDAyBVC,CAAKd,KAEP,CAACZ,IAGG0C,EAAS,uCAAG,8BAAA7B,EAAA,yDACX2B,EAASR,QADE,0EAGOW,IAAKC,OAAOJ,EAASR,SAH5B,cAGRY,EAHQ,gBAIIA,EAAOC,UAJX,OAIRjC,EAJQ,OAKdF,EAASE,GALK,kDAOdY,QAAQC,IAAR,MAPc,0DAAH,qDAkBf,OAPAqB,qBAAU,WACR,IAAMC,EAAO,uCAAG,WAAOC,GAAP,SAAAnC,EAAA,sEACR8B,IAAKC,OAAOI,GADJ,2CAAH,sDAGTR,EAASR,SAASe,EAAQP,EAASR,WACtC,CAACQ,IAGF,eAAC,IAAD,CAAKb,EAAG,EAAR,UACE,cAAC,IAAD,UACE,uBAAOE,MAAO,IAAoBC,OAAQ,IAAoB7B,IAAKuC,MAErE,cAAC,IAAD,CAAQF,QAASI,EAAWL,QAAQ,UAApC,qBAGCjC,GAAW,cAAC,IAAD,sBACXI,GAAU,cAAC,IAAD,CAAK4B,GAAI,EAAT,SAAa5B,QF5D1B+B,KAAM,W,kBGAGU,EAAqEC,IAUnEC,EARF,SAAC,GAAqD,IAAnDC,EAAkD,EAAlDA,SAAaC,EAAqC,4BAChE,OACE,cAACJ,EAAD,yBAAYK,GAAIC,KAAgBF,GAAhC,aACGD,MCGQI,EAdH,WACV,IAAMC,EAAWC,cAEjB,OACE,cAAC,IAAD,CAAMJ,GAAG,MAAM1B,GAAI,CAAE+B,GAAI,EAAGC,GAAI,EAAGC,GAAI,SAAvC,SACGhE,EAAOoB,KAAI,SAAA6C,GAAC,OACX,cAAC,EAAD,CAAmBzB,QAASoB,EAASM,WAAaD,EAAEhE,KAAO,YAAc,MAAOkE,GAAIF,EAAEhE,KAAtF,SACGgE,EAAEvB,MADMuB,EAAEvB,YCoCN0B,EAxCH,WAAO,IAAD,EACU9D,qBADV,mBACTH,EADS,KACFkE,EADE,OAEU/D,oBAAkB,GAF5B,mBAETgE,EAFS,KAEFC,EAFE,KAGVC,EAAS,uCAAG,sBAAAxD,EAAA,2EAEdqD,EAFc,SAECI,MAFD,kFAId9C,QAAQC,IAAR,MACA2C,GAAS,GALK,yDAAH,qDAaf,OAJAtB,qBAAU,WACRuB,MACC,IAGD,eAAC,IAAD,WACE,cAAC,EAAD,IACCF,EACC,cAAC,IAAD,CAAKxC,EAAG,EAAR,iCAEA,mCACG3B,EACC,cAAC,IAAD,UACGH,EAAOoB,KAAI,WAAiCE,GAAjC,IAAGrB,EAAH,EAAGA,KAAiByE,EAApB,EAASxE,UAAT,OACV,cAAC,IAAD,CAAmBD,KAAMA,EAAK0E,QAAQ,IAAK,IAA3C,SACE,cAACD,EAAD,CAAWvE,MAAOA,KADRmB,QAMhB,cAAC,IAAD,CAAKQ,EAAG,EAAR,iCCzBG8C,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCmHCQ,EA1HM,CACnBC,MAAO,CAAC,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,IAAK,IAAK,KACvCC,MAAO,CACLC,KACE,iGACFC,QAAS,UACTC,UAAW,oBAEbC,UAAW,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAC5CC,YAAa,CACXJ,KAAM,IACNC,QAAS,IACTI,KAAM,KAERC,YAAa,CACXN,KAAM,IACNC,QAAS,OAEXM,OAAQ,CACNC,KAAM,OACNC,WAAY,OACZC,QAAS,OACTC,UAAW,OACXC,MAAO,WAETC,MAAO,CACLC,IAAK,CACHC,GAAI,GAENC,UAAW,CACThE,QAAS,YACTiE,MAAO,YACPC,cAAe,SAGnBC,OAAQ,CACNC,KAAM,CACJC,WAAY,OACZC,WAAY,OACZC,WAAY,QAEdC,GAAI,CACFP,MAAO,OACPI,WAAY,UACZC,WAAY,UACZC,WAAY,UACZE,SAAU,GAEZC,GAAI,CACFT,MAAO,OACPI,WAAY,UACZC,WAAY,UACZC,WAAY,UACZE,SAAU,GAEZE,GAAI,CACFV,MAAO,OACPI,WAAY,UACZC,WAAY,UACZC,WAAY,UACZE,SAAU,GAEZG,GAAI,CACFX,MAAO,OACPI,WAAY,UACZC,WAAY,UACZC,WAAY,UACZE,SAAU,GAEZI,GAAI,CACFZ,MAAO,OACPI,WAAY,UACZC,WAAY,UACZC,WAAY,UACZE,SAAU,GAEZK,GAAI,CACFb,MAAO,OACPI,WAAY,UACZC,WAAY,UACZC,WAAY,UACZE,SAAU,GAEZnF,EAAG,CACD2E,MAAO,OACPI,WAAY,OACZE,WAAY,OACZD,WAAY,QAEd9F,EAAG,CACDyF,MAAO,WAETc,IAAK,CACHV,WAAY,YACZW,UAAW,OACXC,KAAM,CACJhB,MAAO,YAGXgB,KAAM,CACJZ,WAAY,YACZI,SAAU,WAEZS,MAAO,CACL1F,MAAO,OACP2F,eAAgB,WAChBC,cAAe,GAEjBC,GAAI,CACFC,UAAW,OACXC,kBAAmB,SAErBC,GAAI,CACFF,UAAW,OACXC,kBAAmB,SAErBhH,IAAK,CACHkH,SAAU,UChHhBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAe/C,MAAOA,EAAtB,SACE,cAAC,EAAD,QAGJgD,SAASC,eAAe,SAM1B1D,M","file":"static/js/main.698d5131.chunk.js","sourcesContent":["import { ImageDetection, Webcam } from '../pages'\n\nconst Routes = [\n  {\n    path: './image-detection',\n    component: ImageDetection,\n    name: 'Random Image Detection',\n  },\n  {\n    path: './webcam',\n    component: Webcam,\n    name: 'Webcam',\n  },\n]\n\nexport default Routes\n","import '@tensorflow/tfjs'\nimport { Box, Image, Button } from 'theme-ui'\nimport { useCallback, useRef, useState } from 'react'\nimport { TFPage } from '../types'\n\nconst ImageDetection = ({ model }: TFPage) => {\n  const ref = useRef<HTMLImageElement>(null)\n  const [loading, setLoading] = useState<boolean>(false)\n\n  const [key, setKey] = useState<number>(0)\n  const [result, setResult] = useState<JSX.Element[]>()\n\n  const classify = useCallback(\n    (img: HTMLImageElement) => {\n      const load = async (img: HTMLImageElement) => {\n        if (!model) {\n          setLoading(false)\n          setResult(undefined)\n          return\n        }\n\n        try {\n          setLoading(true)\n          const output = await model.classify(img)\n          const outputList = output.map((o, index) => (\n            <Box key={index}>\n              <b>{o.className}</b> - {`${Math.round(o.probability * 100)}%`}\n            </Box>\n          ))\n\n          setResult(outputList)\n          setLoading(false)\n        } catch (e) {\n          setLoading(false)\n          setResult(undefined)\n          console.log(e)\n        }\n      }\n      load(img)\n    },\n    [model]\n  )\n\n  const onLoadImage = () => {\n    if (ref.current) classify(ref.current)\n  }\n\n  return (\n    <Box p={4}>\n      {model && (\n        <Box sx={{ width: 1000 }}>\n          <Box sx={{ height: 700 }}>\n            <Image\n              onLoad={onLoadImage}\n              key={key}\n              ref={ref}\n              alt=\"cat\"\n              crossOrigin=\"anonymous\"\n              src=\"https://picsum.photos/1000/700\"\n            />\n          </Box>\n          <Box mt={3}>{loading ? 'loading' : result ? result : ''}</Box>\n          {!loading && (\n            <Button\n              mt={3}\n              variant=\"primary\"\n              onClick={() => {\n                setLoading(true)\n                setResult(undefined)\n                setKey(key + 1)\n              }}\n            >\n              reload\n            </Button>\n          )}\n        </Box>\n      )}\n    </Box>\n  )\n}\n\nexport default ImageDetection\n","import { useCallback, useEffect, useRef, useState } from 'react'\nimport { data, Tensor3D } from '@tensorflow/tfjs'\nimport { Box, Button } from 'theme-ui'\nimport { TFPage } from '../types'\n\nconst CAMERA_SCALE = 1.2\n\nconst Webcam = ({ model }: TFPage) => {\n  const videoRef = useRef<HTMLVideoElement>(null)\n  const [loading, setLoading] = useState<boolean>(false)\n  const [result, setResult] = useState<JSX.Element[]>()\n\n  const classify = useCallback(\n    (img: Tensor3D) => {\n      const load = async (img: Tensor3D) => {\n        if (!model) {\n          setResult(undefined)\n          return\n        }\n\n        try {\n          setLoading(true)\n          const output = await model.classify(img)\n          const outputList = output.map((o, index) => (\n            <Box key={index}>\n              <b>{o.className}</b> - {`${Math.round(o.probability * 100)}%`}\n            </Box>\n          ))\n\n          setResult(outputList)\n          setLoading(false)\n\n          img.dispose()\n        } catch (e) {\n          setLoading(false)\n          setResult(undefined)\n          console.log(e)\n        }\n      }\n      load(img)\n    },\n    [model]\n  )\n\n  const onCapture = async () => {\n    if (!videoRef.current) return\n    try {\n      const webcam = await data.webcam(videoRef.current)\n      const img = await webcam.capture()\n      classify(img)\n    } catch (e) {\n      console.log(e)\n    }\n  }\n\n  useEffect(() => {\n    const loadCam = async (video: HTMLVideoElement) => {\n      await data.webcam(video)\n    }\n    if (videoRef.current) loadCam(videoRef.current)\n  }, [videoRef])\n\n  return (\n    <Box p={4}>\n      <Box>\n        <video width={640 * CAMERA_SCALE} height={480 * CAMERA_SCALE} ref={videoRef}></video>\n      </Box>\n      <Button onClick={onCapture} variant=\"primary\">\n        Capture\n      </Button>\n      {loading && <Box>loading</Box>}\n      {result && <Box mt={3}>{result}</Box>}\n    </Box>\n  )\n}\n\nexport default Webcam\n","import React, { RefAttributes, PropsWithoutRef, ForwardRefExoticComponent } from 'react'\nimport { Link as RouterLink, LinkProps as RouterLinkProps } from 'react-router-dom'\nimport { NavLink as ThemeUILink, NavLinkProps as ThemedUILinkProps } from 'theme-ui'\n\n/**\n * @see https://www.reactjunkie.com/theme-ui-react-router-link-typescript\n */\n\ntype ForwardRef<T, P> = ForwardRefExoticComponent<PropsWithoutRef<P> & RefAttributes<T>>\n\nexport type CustomLinkCombinedProps = ThemedUILinkProps & RouterLinkProps<{}>\nexport const CustomLink: ForwardRef<HTMLAnchorElement, CustomLinkCombinedProps> = ThemeUILink\n\nconst Link = ({ children, ...props }: CustomLinkCombinedProps) => {\n  return (\n    <CustomLink as={RouterLink} {...props}>\n      {children}\n    </CustomLink>\n  )\n}\n\nexport default Link\n","import { useLocation } from 'react-router-dom'\nimport { Flex } from 'theme-ui'\nimport { Link } from '..'\nimport Routes from '../../routes'\n\nconst Nav = () => {\n  const location = useLocation()\n\n  return (\n    <Flex as=\"nav\" sx={{ px: 3, py: 4, bg: 'muted' }}>\n      {Routes.map(r => (\n        <Link key={r.name} variant={location.pathname === r.path ? 'navActive' : 'nav'} to={r.path}>\n          {r.name}\n        </Link>\n      ))}\n    </Flex>\n  )\n}\n\nexport default Nav\n","import React, { useEffect, useState } from 'react'\nimport * as mobilenet from '@tensorflow-models/mobilenet'\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\nimport { Box } from 'theme-ui'\nimport Routes from './routes'\nimport { Nav } from './components'\n\nconst App = () => {\n  const [model, setModel] = useState<mobilenet.MobileNet>()\n  const [error, setError] = useState<boolean>(false)\n  const loadModel = async () => {\n    try {\n      setModel(await mobilenet.load())\n    } catch (e) {\n      console.log(e)\n      setError(true)\n    }\n  }\n\n  useEffect(() => {\n    loadModel()\n  }, [])\n\n  return (\n    <Router>\n      <Nav />\n      {error ? (\n        <Box p={3}>Error loading Model</Box>\n      ) : (\n        <>\n          {model ? (\n            <Switch>\n              {Routes.map(({ path, component: Component }, index) => (\n                <Route key={index} path={path.replace('.', '')}>\n                  <Component model={model} />\n                </Route>\n              ))}\n            </Switch>\n          ) : (\n            <Box p={3}>Loading Model</Box>\n          )}\n        </>\n      )}\n    </Router>\n  )\n}\n\nexport default App\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { Theme } from 'theme-ui'\n\nconst theme: Theme = {\n  space: [0, 4, 8, 16, 32, 64, 128, 256, 512],\n  fonts: {\n    body:\n      'system-ui, -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, \"Helvetica Neue\", sans-serif',\n    heading: 'inherit',\n    monospace: 'Menlo, monospace',\n  },\n  fontSizes: [12, 14, 16, 20, 24, 32, 48, 64, 96],\n  fontWeights: {\n    body: 400,\n    heading: 700,\n    bold: 700,\n  },\n  lineHeights: {\n    body: 1.5,\n    heading: 1.125,\n  },\n  colors: {\n    text: '#000',\n    background: '#fff',\n    primary: '#07c',\n    secondary: '#30c',\n    muted: '#f6f6f6',\n  },\n  links: {\n    nav: {\n      mr: 4,\n    },\n    navActive: {\n      variant: 'links.nav',\n      color: 'secondary',\n      pointerEvents: 'none',\n    },\n  },\n  styles: {\n    root: {\n      fontFamily: 'body',\n      lineHeight: 'body',\n      fontWeight: 'body',\n    },\n    h1: {\n      color: 'text',\n      fontFamily: 'heading',\n      lineHeight: 'heading',\n      fontWeight: 'heading',\n      fontSize: 5,\n    },\n    h2: {\n      color: 'text',\n      fontFamily: 'heading',\n      lineHeight: 'heading',\n      fontWeight: 'heading',\n      fontSize: 4,\n    },\n    h3: {\n      color: 'text',\n      fontFamily: 'heading',\n      lineHeight: 'heading',\n      fontWeight: 'heading',\n      fontSize: 3,\n    },\n    h4: {\n      color: 'text',\n      fontFamily: 'heading',\n      lineHeight: 'heading',\n      fontWeight: 'heading',\n      fontSize: 2,\n    },\n    h5: {\n      color: 'text',\n      fontFamily: 'heading',\n      lineHeight: 'heading',\n      fontWeight: 'heading',\n      fontSize: 1,\n    },\n    h6: {\n      color: 'text',\n      fontFamily: 'heading',\n      lineHeight: 'heading',\n      fontWeight: 'heading',\n      fontSize: 0,\n    },\n    p: {\n      color: 'text',\n      fontFamily: 'body',\n      fontWeight: 'body',\n      lineHeight: 'body',\n    },\n    a: {\n      color: 'primary',\n    },\n    pre: {\n      fontFamily: 'monospace',\n      overflowX: 'auto',\n      code: {\n        color: 'inherit',\n      },\n    },\n    code: {\n      fontFamily: 'monospace',\n      fontSize: 'inherit',\n    },\n    table: {\n      width: '100%',\n      borderCollapse: 'separate',\n      borderSpacing: 0,\n    },\n    th: {\n      textAlign: 'left',\n      borderBottomStyle: 'solid',\n    },\n    td: {\n      textAlign: 'left',\n      borderBottomStyle: 'solid',\n    },\n    img: {\n      maxWidth: '100%',\n    },\n  },\n}\n\nexport default theme\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { ThemeProvider } from 'theme-ui'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\nimport theme from './theme'\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n      <App />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}