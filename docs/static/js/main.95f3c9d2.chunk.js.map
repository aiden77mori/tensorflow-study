{"version":3,"sources":["pages/TransferLearning.tsx","pages/FaceMesh.tsx","pages/HandPose.tsx","pages/Home.tsx","pages/Webcam.tsx","pages/ImageDetection.tsx","pages/SentimentAnalysis.tsx","hooks/useAnalyser.ts","hooks/useUserMedia.ts","pages/Audio.tsx","routes/index.ts","components/Link/Link.tsx","components/Nav/Nav.tsx","App.tsx","reportWebVitals.ts","theme/index.ts","index.tsx"],"names":["raf","ctx","model","camera","renderer","points","stats","Home","p","Webcam","modelMobilenet","videoRef","useRef","useState","loading","setLoading","result","setResult","classify","useCallback","img","a","undefined","output","outputList","map","o","index","className","Math","round","probability","dispose","console","log","load","onCapture","current","data","webcam","capture","useEffect","loadCam","video","style","transform","width","height","ref","onClick","variant","mt","ImageDetection","modelKnn","key","setKey","sx","onLoad","alt","crossOrigin","src","POSES","sort","b","localeCompare","TransferLearning","setWebcam","takingPictures","setTakingPictures","takenPoses","setTakenPoses","allPoses","setAllPoses","stopLoopDetection","window","cancelAnimationFrame","addExample","classId","i","activation","infer","nextFrame","poses","toString","loopDetection","getNumClasses","predictClass","mb","fontWeight","label","Object","keys","confidences","requestAnimationFrame","mx","textAlign","maxWidth","opacity","pointerEvents","justifyContent","NUM_KEYPOINTS","BLUE","VIDEO_SIZE","distance","sqrt","pow","FaceMesh","canvasRef","loopPredictions","estimateFaces","returnTensors","flipHorizontal","input","predictions","drawImage","forEach","prediction","keypoints","mesh","fillStyle","x","y","beginPath","arc","PI","fill","length","strokeStyle","lineWidth","leftCenter","leftDiameterY","leftDiameterX","ellipse","stroke","rightCenter","rightDiameterY","rightDiameterX","loadModel","faceLandmarksDetection","mediapipeFacemesh","setupCamera","navigator","mediaDevices","getUserMedia","facingMode","stream","getContext","translate","scale","onLoadedMetadata","removeEventListener","addEventListener","srcObject","position","autoPlay","visibility","left","top","SentimentAnalysis","setModel","modelToxicity","setModelToxicity","metadata","setMetadata","loadingScore","setLoadingScore","score","setScore","scoreToxicity","setScoreToxicity","state","setState","loadToxicity","loadLayersModel","fetch","json","onAnalyse","e","preventDefault","trimmed","trim","toLowerCase","replace","split","sequence","word","wordIndex","word_index","index_from","finalSequence","Array","max_len","concat","inputTensor","tensor2d","predict","dataSync","as","onSubmit","maxLength","autoComplete","onChange","evt","currentTarget","value","name","bottom","right","fontSize","color","s","pl","results","every","match","r","JSON","stringify","probabilities","useAnalyser","fftSize","analyser","setAnalyser","audioctx","AudioContext","source","createMediaStreamSource","createAnalyser","smoothingTimeConstant","connect","useUserMedia","props","media","setMedia","error","setError","getMedia","Audio","audio","getAudioData","freqData","Uint8Array","frequencyBinCount","getByteFrequencyData","imageData","getImageData","putImageData","canvas","max","moveTo","lineTo","drawCanvas","scene","Scene","geometry","BufferGeometry","positions","Color","colors","propsGui","offsetX","offsetY","palette","gui","dat","add","Routes","path","component","exact","estimateHands","annotations","setHex","push","g","setAttribute","Float32BufferAttribute","computeBoundingSphere","attributes","needsUpdate","render","update","handpose","onloadedmetadata","play","PerspectiveCamera","z","texture","TextureLoader","WebGLRenderer","alpha","setSize","material","PointsMaterial","size","vertexColors","Points","Stats","document","body","appendChild","dom","CustomLink","ThemeUILink","Link","children","RouterLink","Nav","location","useLocation","px","py","bg","pathname","to","App","setModelMobilenet","setModelKnn","loadModels","mobilenet","knn","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","theme","space","fonts","heading","monospace","fontSizes","fontWeights","bold","lineHeights","buttons","primary","cursor","secondary","text","background","muted","links","nav","mr","navActive","styles","root","fontFamily","lineHeight","h1","h2","h3","h4","h5","h6","pre","overflowX","code","table","borderCollapse","borderSpacing","th","borderBottomStyle","td","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.95f3c9d2.chunk.js","sourcesContent":["import { data, nextFrame } from '@tensorflow/tfjs'\nimport React, { useEffect, useRef, useState } from 'react'\nimport { Box, Text, Button, Flex } from 'theme-ui'\nimport { TFPage } from '../types'\n\nconst CAMERA_SCALE = 1.2\nconst POSES = ['left', 'up', 'down', 'center', 'right'].sort((a, b) => a.localeCompare(b))\nlet raf: number | undefined\n\nconst TransferLearning = ({ modelMobilenet, modelKnn }: TFPage) => {\n  const videoRef = useRef<HTMLVideoElement>(null)\n  const [webcam, setWebcam] = useState<any>()\n  const [result, setResult] = useState<JSX.Element>()\n  const [takingPictures, setTakingPictures] = useState<boolean>(false)\n  const [takenPoses, setTakenPoses] = useState<any[]>([])\n  const [allPoses, setAllPoses] = useState<boolean>(false)\n\n  useEffect(() => {\n    const loadCam = async (video: HTMLVideoElement) => {\n      setWebcam(await data.webcam(video))\n    }\n    if (videoRef.current) loadCam(videoRef.current)\n\n    return () => {\n      stopLoopDetection()\n    }\n  }, [videoRef])\n\n  const stopLoopDetection = () => {\n    if (raf) window.cancelAnimationFrame(raf)\n    raf = undefined\n  }\n\n  const addExample = async (classId: number | string) => {\n    setTakingPictures(true)\n    let i = 0\n\n    while (i < 15) {\n      const img = await webcam.capture()\n      const activation = modelMobilenet?.infer(img)\n\n      if (activation) modelKnn?.addExample(activation, classId)\n\n      img.dispose()\n      i++\n      await nextFrame()\n    }\n\n    const poses = [...takenPoses, classId].sort((a, b) => a.localeCompare(b))\n    setTakenPoses(poses)\n    setTakingPictures(false)\n\n    if (poses.toString() === POSES.toString()) {\n      setAllPoses(true)\n    }\n  }\n\n  const loopDetection = async () => {\n    if (!modelKnn) return\n    if (modelKnn.getNumClasses() > 0) {\n      const img = await webcam.capture()\n      const activation = modelMobilenet?.infer(img)\n      const result = await modelKnn?.predictClass(activation!)\n\n      setResult(\n        <Box>\n          <Box mb={2} sx={{ fontWeight: 'bold' }}>\n            {result.label}\n          </Box>\n          {Object.keys(result.confidences).map((a, index) => (\n            <Box key={index}>\n              {a}: {result.confidences[a]}\n            </Box>\n          ))}\n        </Box>\n      )\n\n      img.dispose()\n    }\n\n    raf = window.requestAnimationFrame(loopDetection)\n  }\n\n  const startLoopDetection = () => {\n    loopDetection()\n  }\n\n  return (\n    <Box p={4}>\n      <Box sx={{ mx: 'auto', textAlign: 'center', maxWidth: 640 * CAMERA_SCALE }}>\n        <Box>\n          <video\n            style={{\n              transform: 'scaleX(-1)',\n            }}\n            width={640 * CAMERA_SCALE}\n            height={480 * CAMERA_SCALE}\n            ref={videoRef}\n          ></video>\n        </Box>\n        <Box\n          mt={3}\n          sx={{\n            opacity: takingPictures ? 0.5 : 1,\n            pointerEvents: takingPictures ? 'none' : 'visible',\n          }}\n        >\n          {!allPoses && (\n            <Box>\n              <Text>Teach the machine all angles of your face</Text>\n              <Flex sx={{ mt: 3, justifyContent: 'space-between' }}>\n                <Button onClick={() => addExample('left')} variant=\"secondary\">\n                  Left\n                </Button>\n                <Button onClick={() => addExample('up')} variant=\"secondary\">\n                  Up\n                </Button>\n                <Button onClick={() => addExample('center')} variant=\"secondary\">\n                  Center\n                </Button>\n                <Button onClick={() => addExample('down')} variant=\"secondary\">\n                  Down\n                </Button>\n                <Button onClick={() => addExample('right')} variant=\"secondary\">\n                  Right\n                </Button>\n              </Flex>\n            </Box>\n          )}\n          {allPoses && (\n            <Button onClick={startLoopDetection} mt={5}>\n              Detect head position\n            </Button>\n          )}\n        </Box>\n        <Box mt={3}>{result}</Box>\n      </Box>\n    </Box>\n  )\n}\n\nexport default TransferLearning\n","import { useCallback, useEffect, useRef } from 'react'\nimport { Box } from 'theme-ui'\nimport * as faceLandmarksDetection from '@tensorflow-models/face-landmarks-detection'\n\nlet raf = 0\n\nconst NUM_KEYPOINTS = 468\nconst NUM_IRIS_KEYPOINTS = 5\nconst BLUE = '#157AB3'\nconst RED = '#FF2C35'\nconst VIDEO_SIZE = 500\n\nlet ctx: CanvasRenderingContext2D\nlet model: faceLandmarksDetection.FaceLandmarksPackage\n\nconst distance = (a: number[], b: number[]) => {\n  return Math.sqrt(Math.pow(a[0] - b[0], 2) + Math.pow(a[1] - b[1], 2))\n}\n\nconst FaceMesh = () => {\n  const videoRef = useRef<HTMLVideoElement>(null)\n  const canvasRef = useRef<HTMLCanvasElement>(null)\n\n  const loopPredictions = useCallback(async () => {\n    if (model && videoRef.current && ctx) {\n      const predictions = await model.estimateFaces({\n        returnTensors: false,\n        flipHorizontal: false,\n        input: videoRef.current,\n      })\n\n      ctx.drawImage(videoRef.current, 0, 0, VIDEO_SIZE, VIDEO_SIZE, 0, 0, VIDEO_SIZE, VIDEO_SIZE)\n\n      predictions.forEach(prediction => {\n        const keypoints = prediction.mesh\n\n        ctx.fillStyle = BLUE\n\n        for (let i = 0; i < NUM_KEYPOINTS; i++) {\n          //@ts-ignore\n          const x = keypoints[i][0]\n          //@ts-ignore\n          const y = keypoints[i][1]\n\n          ctx.beginPath()\n          ctx.arc(x, y, 1 /* radius */, 0, 2 * Math.PI)\n          ctx.fill()\n        }\n\n        //@ts-ignore\n        if (keypoints.length > NUM_KEYPOINTS) {\n          ctx.strokeStyle = RED\n          ctx.lineWidth = 1\n\n          //@ts-ignore\n          const leftCenter = keypoints[NUM_KEYPOINTS]\n          //@ts-ignore\n          const leftDiameterY = distance(keypoints[NUM_KEYPOINTS + 4], keypoints[NUM_KEYPOINTS + 2])\n          //@ts-ignore\n          const leftDiameterX = distance(keypoints[NUM_KEYPOINTS + 3], keypoints[NUM_KEYPOINTS + 1])\n\n          ctx.beginPath()\n          ctx.ellipse(\n            leftCenter[0],\n            leftCenter[1],\n            leftDiameterX / 2,\n            leftDiameterY / 2,\n            0,\n            0,\n            2 * Math.PI\n          )\n          ctx.stroke()\n\n          //@ts-ignore\n          if (keypoints.length > NUM_KEYPOINTS + NUM_IRIS_KEYPOINTS) {\n            //@ts-ignore\n            const rightCenter = keypoints[NUM_KEYPOINTS + NUM_IRIS_KEYPOINTS]\n            const rightDiameterY = distance(\n              //@ts-ignore\n              keypoints[NUM_KEYPOINTS + NUM_IRIS_KEYPOINTS + 2],\n              //@ts-ignore\n              keypoints[NUM_KEYPOINTS + NUM_IRIS_KEYPOINTS + 4]\n            )\n            const rightDiameterX = distance(\n              //@ts-ignore\n              keypoints[NUM_KEYPOINTS + NUM_IRIS_KEYPOINTS + 3],\n              //@ts-ignore\n              keypoints[NUM_KEYPOINTS + NUM_IRIS_KEYPOINTS + 1]\n            )\n\n            ctx.beginPath()\n            ctx.ellipse(\n              rightCenter[0],\n              rightCenter[1],\n              rightDiameterX / 2,\n              rightDiameterY / 2,\n              0,\n              0,\n              2 * Math.PI\n            )\n            ctx.stroke()\n          }\n        }\n      })\n    }\n\n    raf = requestAnimationFrame(loopPredictions)\n  }, [])\n\n  const loadModel = useCallback(async () => {\n    model = await faceLandmarksDetection.load(\n      faceLandmarksDetection.SupportedPackages.mediapipeFacemesh\n    )\n\n    loopPredictions()\n  }, [loopPredictions])\n\n  const setupCamera = useCallback(\n    async (video: HTMLVideoElement) => {\n      try {\n        const stream = await navigator.mediaDevices.getUserMedia({\n          video: {\n            facingMode: 'user',\n            // Only setting the video to a specified size in order to accommodate a\n            // point cloud, so on mobile devices accept the default size.\n            width: VIDEO_SIZE,\n            height: VIDEO_SIZE,\n          },\n        })\n\n        ctx = canvasRef?.current?.getContext('2d')!\n        ctx.translate(VIDEO_SIZE, 0)\n        ctx.scale(-1, 1)\n        ctx.fillStyle = BLUE\n        ctx.strokeStyle = BLUE\n        ctx.lineWidth = 0.5\n\n        const onLoadedMetadata = () => {\n          video.removeEventListener('loadedmetadata', onLoadedMetadata)\n          loadModel()\n        }\n        video.addEventListener('loadedmetadata', onLoadedMetadata)\n        video.srcObject = stream\n      } catch (e) {\n        console.log(e)\n      }\n    },\n    [loadModel]\n  )\n\n  useEffect(() => {\n    if (videoRef.current && canvasRef.current) {\n      console.log('useEffect')\n      setupCamera(videoRef.current)\n    }\n\n    return () => {\n      cancelAnimationFrame(raf)\n    }\n  }, [setupCamera])\n\n  return (\n    <Box p={4}>\n      <Box sx={{ position: 'relative' }}>\n        <video\n          autoPlay\n          style={{\n            transform: 'scaleX(-1)',\n            visibility: 'hidden',\n            width: 'auto',\n            height: 'auto',\n          }}\n          ref={videoRef}\n        />\n        <canvas\n          ref={canvasRef}\n          style={{\n            position: 'absolute',\n            left: '50%',\n            top: '50%',\n            transform: 'translate3d(-50%, -50%, 0)',\n          }}\n          width={VIDEO_SIZE}\n          height={VIDEO_SIZE}\n        />\n      </Box>\n    </Box>\n  )\n}\n\nexport default FaceMesh\n","import { useCallback, useEffect, useRef, useState } from 'react'\nimport { Box, Text } from 'theme-ui'\nimport * as handpose from '@tensorflow-models/handpose'\nimport Stats from 'three/examples/jsm/libs/stats.module'\nimport {\n  Scene,\n  PerspectiveCamera,\n  BufferGeometry,\n  Float32BufferAttribute,\n  WebGLRenderer,\n  PointsMaterial,\n  Points,\n  Color,\n  TextureLoader,\n} from 'three'\n\nimport * as dat from 'dat.gui'\n\nimport useUserMedia from '../hooks/useUserMedia'\n\nconst CAMERA_SCALE = 1.25\nlet model: handpose.HandPose | undefined = undefined\nlet raf = 0\n\nconst scene = new Scene()\nlet camera: PerspectiveCamera\nlet renderer: WebGLRenderer\nconst geometry = new BufferGeometry()\nlet positions: number[] = []\nconst color: Color = new Color()\nlet colors: number[] = []\nlet points: Points\nlet stats: Stats\n\nconst propsGui = {\n  offsetX: -215,\n  offsetY: 137,\n}\n\nconst palette = [0xedae49, 0xd1495b, 0x00798c, 0x30638e, 0x003d5b, 0x4b3f72, 0xe9190f]\n\nconst gui = new dat.GUI()\ngui.add(propsGui, 'offsetX', -300, 300, 1)\ngui.add(propsGui, 'offsetY', -300, 300, 1)\n\nconst HandPose = () => {\n  const canvasRef = useRef<HTMLCanvasElement>(null)\n  const videoRef = useRef<HTMLVideoElement>(null)\n  const [loading, setLoading] = useState(true)\n  const [stream] = useUserMedia({ video: true })\n\n  const estimateHands = useCallback(async () => {\n    try {\n      const predictions = videoRef.current && (await model?.estimateHands(videoRef.current))\n\n      if (canvasRef.current) {\n        positions = []\n        colors = []\n        const { width, height } = canvasRef.current\n        predictions?.forEach(p => {\n          Object.keys(p.annotations).forEach((a, index) => {\n            color.setHex(palette[index % (palette.length - 1)])\n            p.annotations[a].forEach(i => {\n              positions.push(\n                i[0] - width / 2 + propsGui.offsetX,\n                height / 2 - i[1] + propsGui.offsetY,\n                -i[2]\n              )\n              colors.push(color.r, color.g, color.b)\n            })\n          })\n        })\n\n        geometry.setAttribute('position', new Float32BufferAttribute(positions, 3))\n        geometry.setAttribute('color', new Float32BufferAttribute(colors, 3))\n        geometry.computeBoundingSphere()\n        points.geometry.attributes.position.needsUpdate = true\n      }\n\n      renderer.render(scene, camera)\n      stats.update()\n      raf = requestAnimationFrame(estimateHands)\n    } catch (e) {\n      console.log(e)\n    }\n  }, [])\n\n  const loadModel = useCallback(async () => {\n    try {\n      setLoading(true)\n      model = await handpose.load()\n      setLoading(false)\n      estimateHands()\n    } catch (e) {\n      console.log(e)\n    }\n  }, [setLoading, estimateHands])\n\n  useEffect(() => {\n    if (!videoRef.current || !canvasRef.current) return\n    videoRef.current.srcObject = stream\n    videoRef.current.onloadedmetadata = () => {\n      videoRef.current!.play()\n      loadModel()\n    }\n\n    const { width, height } = canvasRef.current\n\n    camera = new PerspectiveCamera(90, width / height, 0.1, 1000)\n    camera.position.z = width / 2\n\n    const texture = new TextureLoader().load(\n      'https://raw.githubusercontent.com/mrdoob/three.js/master/examples/textures/sprites/disc.png'\n    )\n    //\n\n    renderer = new WebGLRenderer({\n      canvas: canvasRef.current,\n      alpha: true,\n    })\n\n    renderer.setSize(width, height)\n\n    const material = new PointsMaterial({ size: 10, vertexColors: true, map: texture })\n\n    points = new Points(geometry, material)\n    scene.add(points)\n\n    stats = Stats()\n    document.body.appendChild(stats.dom)\n\n    return () => {\n      cancelAnimationFrame(raf)\n      raf = 0\n    }\n  }, [canvasRef, videoRef, stream, loadModel])\n\n  return (\n    <Box p={4}>\n      <Box sx={{ position: 'relative' }}>\n        <video\n          style={{ transform: 'scaleX(-1)' }}\n          ref={videoRef}\n          width={640 * CAMERA_SCALE}\n          height={360 * CAMERA_SCALE}\n        />\n        <canvas\n          style={{ transform: 'scaleX(-1)', position: 'absolute', top: 0, left: 0 }}\n          ref={canvasRef}\n          width={640 * CAMERA_SCALE}\n          height={360 * CAMERA_SCALE}\n        />\n      </Box>\n\n      {loading && <Text>Loading Hand pose model...</Text>}\n    </Box>\n  )\n}\n\nexport default HandPose\n","import { Box } from 'theme-ui'\n\nconst Home = () => {\n  return <Box p={4}>Choose one from the menu above</Box>\n}\n\nexport default Home\n","import { useCallback, useEffect, useRef, useState } from 'react'\nimport { data, Tensor3D } from '@tensorflow/tfjs'\nimport { Box, Button } from 'theme-ui'\nimport { TFPage } from '../types'\n\nconst CAMERA_SCALE = 1.2\n\nconst Webcam = ({ modelMobilenet }: TFPage) => {\n  const videoRef = useRef<HTMLVideoElement>(null)\n  const [loading, setLoading] = useState<boolean>(false)\n  const [result, setResult] = useState<JSX.Element[]>()\n\n  const classify = useCallback(\n    (img: Tensor3D) => {\n      const load = async (img: Tensor3D) => {\n        if (!modelMobilenet) {\n          setResult(undefined)\n          return\n        }\n\n        try {\n          setLoading(true)\n          const output = await modelMobilenet.classify(img)\n          const outputList = output.map((o, index) => (\n            <Box key={index}>\n              <b>{o.className}</b> - {`${Math.round(o.probability * 100)}%`}\n            </Box>\n          ))\n\n          setResult(outputList)\n          setLoading(false)\n\n          img.dispose()\n        } catch (e) {\n          setLoading(false)\n          setResult(undefined)\n          console.log(e)\n        }\n      }\n      load(img)\n    },\n    [modelMobilenet]\n  )\n\n  const onCapture = async () => {\n    if (!videoRef.current) return\n    try {\n      const webcam = await data.webcam(videoRef.current)\n      const img = await webcam.capture()\n      classify(img)\n    } catch (e) {\n      console.log(e)\n    }\n  }\n\n  useEffect(() => {\n    const loadCam = async (video: HTMLVideoElement) => {\n      await data.webcam(video)\n    }\n    if (videoRef.current) loadCam(videoRef.current)\n  }, [videoRef])\n\n  return (\n    <Box p={4}>\n      <Box>\n        <video\n          style={{\n            transform: 'scaleX(-1)',\n          }}\n          width={640 * CAMERA_SCALE}\n          height={480 * CAMERA_SCALE}\n          ref={videoRef}\n        ></video>\n      </Box>\n      <Button onClick={onCapture} variant=\"primary\">\n        Capture\n      </Button>\n      {loading && <Box>loading</Box>}\n      {result && <Box mt={3}>{result}</Box>}\n    </Box>\n  )\n}\n\nexport default Webcam\n","import '@tensorflow/tfjs'\nimport { Box, Image, Button } from 'theme-ui'\nimport { useCallback, useRef, useState } from 'react'\nimport { TFPage } from '../types'\n\nconst ImageDetection = ({ modelMobilenet, modelKnn }: TFPage) => {\n  const ref = useRef<HTMLImageElement>(null)\n  const [loading, setLoading] = useState<boolean>(false)\n\n  const [key, setKey] = useState<number>(0)\n  const [result, setResult] = useState<JSX.Element[]>()\n\n  const classify = useCallback(\n    (img: HTMLImageElement) => {\n      const load = async (img: HTMLImageElement) => {\n        if (!modelMobilenet) {\n          setLoading(false)\n          setResult(undefined)\n          return\n        }\n\n        try {\n          setLoading(true)\n          const output = await modelMobilenet.classify(img)\n          const outputList = output.map((o, index) => (\n            <Box key={index}>\n              <b>{o.className}</b> - {`${Math.round(o.probability * 100)}%`}\n            </Box>\n          ))\n\n          setResult(outputList)\n          setLoading(false)\n        } catch (e) {\n          setLoading(false)\n          setResult(undefined)\n          console.log(e)\n        }\n      }\n      load(img)\n    },\n    [modelMobilenet]\n  )\n\n  const onLoadImage = () => {\n    if (ref.current) classify(ref.current)\n  }\n\n  return (\n    <Box p={4}>\n      {modelMobilenet && (\n        <Box sx={{ width: 1000 }}>\n          <Box sx={{ height: 700 }}>\n            <Image\n              onLoad={onLoadImage}\n              key={key}\n              ref={ref}\n              alt=\"cat\"\n              crossOrigin=\"anonymous\"\n              src=\"https://picsum.photos/1000/700\"\n            />\n          </Box>\n          <Box mt={3}>{loading ? 'loading' : result ? result : ''}</Box>\n          {!loading && (\n            <Button\n              mt={3}\n              variant=\"primary\"\n              onClick={() => {\n                setLoading(true)\n                setResult(undefined)\n                setKey(key + 1)\n              }}\n            >\n              reload\n            </Button>\n          )}\n        </Box>\n      )}\n    </Box>\n  )\n}\n\nexport default ImageDetection\n","import { LayersModel, loadLayersModel, tensor2d } from '@tensorflow/tfjs'\nimport React, { ChangeEvent, FormEvent, useEffect, useState } from 'react'\nimport { Box, Button, Heading, Input, Text } from 'theme-ui'\nimport { ToxicityClassifier, load as loadToxicity } from '@tensorflow-models/toxicity'\n\nconst MODEL_URL = 'https://storage.googleapis.com/tfjs-models/tfjs/sentiment_cnn_v1/model.json'\nconst METADATA_URL =\n  'https://storage.googleapis.com/tfjs-models/tfjs/sentiment_cnn_v1/metadata.json'\n\nconst SentimentAnalysis = () => {\n  const [model, setModel] = useState<LayersModel>()\n  const [modelToxicity, setModelToxicity] = useState<ToxicityClassifier>()\n  const [metadata, setMetadata] = useState<any>()\n  const [loading, setLoading] = useState<boolean>(false)\n  const [loadingScore, setLoadingScore] = useState<boolean>(false)\n  const [score, setScore] = useState<number>()\n  const [scoreToxicity, setScoreToxicity] = useState<any[]>()\n  const [state, setState] = useState<string>(\n    'This is really the most useless talk I have ever watched'\n  )\n\n  const loadModel = async () => {\n    setLoading(true)\n    setModelToxicity(await loadToxicity(0.9, []))\n    setModel(await loadLayersModel(MODEL_URL))\n    setMetadata(await (await fetch(METADATA_URL)).json())\n    setLoading(false)\n  }\n\n  const onChange = (evt: ChangeEvent<HTMLInputElement>) => {\n    setState(evt.currentTarget.value)\n  }\n\n  const onAnalyse = async (e: FormEvent | MouseEvent) => {\n    e.preventDefault()\n    if (!metadata || !model) return\n\n    setLoadingScore(true)\n    setScore(undefined)\n    setScoreToxicity(undefined)\n\n    const trimmed = state\n      .trim()\n      .toLowerCase()\n      .replace(/(\\.|,|!\\?)/g, '')\n      .split(' ')\n\n    const sequence = trimmed.map(word => {\n      const wordIndex = metadata.word_index[word]\n      if (typeof wordIndex === 'undefined') {\n        return 2\n      }\n      return wordIndex + metadata.index_from\n    })\n\n    const finalSequence = new Array(metadata.max_len - sequence.length).fill(0).concat(sequence)\n\n    const inputTensor = tensor2d(finalSequence, [1, metadata.max_len])\n    const prediction = model.predict(inputTensor)\n    //@ts-ignore\n    setScore(prediction.dataSync()[0])\n    //@ts-ignore\n    prediction.dispose()\n\n    setScoreToxicity(await modelToxicity?.classify([state]))\n    setLoadingScore(false)\n  }\n\n  useEffect(() => {\n    loadModel()\n  }, [])\n\n  return (\n    <Box p={4}>\n      {loading && <Text>Loading Sentiment and Toxicity models</Text>}\n      {!loading && (\n        <>\n          <Heading as=\"h2\">Sentiment analysis</Heading>\n          <Box as=\"form\" sx={{ position: 'relative' }} onSubmit={onAnalyse}>\n            <Input\n              maxLength={100}\n              autoComplete=\"off\"\n              mt={3}\n              onChange={onChange}\n              value={state}\n              name=\"input\"\n            />\n            <Box sx={{ position: 'absolute', bottom: -25, right: '2px', fontSize: 0 }}>\n              {state.length}/100\n            </Box>\n          </Box>\n          {score && scoreToxicity && (\n            <Box mt={2}>\n              <Text>\n                <Heading mt={4} as=\"h3\">\n                  Sentiment Score:\n                </Heading>\n                <Text\n                  as=\"span\"\n                  mt={3}\n                  sx={{\n                    color: score > 0.66 ? 'green' : score < 0.33 ? 'red' : 'orange',\n                  }}\n                >\n                  {score}\n                </Text>\n              </Text>\n              <Text mt={2}>\n                <Heading mt={4} as=\"h3\">\n                  Toxicity:\n                </Heading>\n                {scoreToxicity?.map((s: any, index: number) => (\n                  <Box\n                    mt={2}\n                    pl={3}\n                    key={index}\n                    sx={{ opacity: s.results.every((a: any) => a.match) ? 1 : 0.4 }}\n                  >\n                    <b>{s.label}</b>:\n                    {s.results.map((r: any, i: number) => (\n                      <Box mt={2} key={i}>\n                        <Text sx={{ pl: 4 }}>Probabilities: {JSON.stringify(r.probabilities)}</Text>\n                        <Text sx={{ pl: 4 }}>\n                          Match:{' '}\n                          <Text\n                            as=\"span\"\n                            sx={{\n                              color: r.match ? 'green' : 'text',\n                              fontWeight: r.match ? 'bold' : 'normal',\n                            }}\n                          >\n                            {JSON.stringify(r.match)}\n                          </Text>\n                        </Text>\n                      </Box>\n                    ))}\n                  </Box>\n                ))}\n              </Text>\n            </Box>\n          )}\n          <Button\n            sx={{\n              opacity: loadingScore ? 0.4 : 1,\n              pointerEvents: loadingScore ? 'none' : 'visible',\n            }}\n            mt={4}\n            onClick={onAnalyse}\n          >\n            {!loadingScore ? 'Analyse' : 'Loading...'}\n          </Button>\n        </>\n      )}\n    </Box>\n  )\n}\n\nexport default SentimentAnalysis\n","import { useEffect, useState } from 'react'\n\nconst useAnalyser = (stream?: MediaStream, fftSize: number = 1024) => {\n  const [analyser, setAnalyser] = useState<AnalyserNode>()\n\n  useEffect(() => {\n    if (!stream || analyser) return\n\n    const audioctx = new AudioContext()\n    const source = audioctx.createMediaStreamSource(stream)\n    const a = audioctx.createAnalyser()\n    a.smoothingTimeConstant = 0\n\n    source.connect(a)\n    a.fftSize = fftSize\n    setAnalyser(a)\n  }, [stream, fftSize, analyser])\n\n  return analyser\n}\n\nexport default useAnalyser\n","import { useEffect, useState } from 'react'\n\nconst useUserMedia = (props: MediaStreamConstraints) => {\n  const [media, setMedia] = useState<MediaStream>()\n  const [error, setError] = useState<any>()\n\n  useEffect(() => {\n    if (media) return\n    const getMedia = async () => {\n      try {\n        setMedia(await navigator.mediaDevices.getUserMedia(props))\n      } catch (e) {\n        setError(e)\n      }\n    }\n\n    getMedia()\n  }, [props, media])\n\n  return [media, error]\n}\n\nexport default useUserMedia\n","import { useCallback, useEffect, useRef } from 'react'\nimport { Box } from 'theme-ui'\nimport useAnalyser from '../hooks/useAnalyser'\nimport useUserMedia from '../hooks/useUserMedia'\n\nlet raf = 0\n\nconst Audio = () => {\n  const [media] = useUserMedia({ audio: true })\n  const analyser = useAnalyser(media)\n  const canvasRef = useRef<HTMLCanvasElement>(null)\n\n  const drawCanvas = (\n    freqData: Uint8Array,\n    ctx: CanvasRenderingContext2D,\n    canvas: HTMLCanvasElement\n  ) => {\n    for (let i = 0; i < freqData.length; i++) {\n      let value = 2 * freqData[i] * 255\n\n      ctx.beginPath()\n      ctx.strokeStyle = `rgba(${Math.max(0, 255 * value)}, ${Math.max(\n        0,\n        255 * (value - 1)\n      )}, 54, 255)`\n      ctx.moveTo(canvas.width - 1, canvas.height - i * (canvas.height / freqData.length))\n\n      ctx.lineTo(\n        canvas.width - 1,\n        canvas.height - (i * canvas.height) / freqData.length + canvas.height / freqData.length\n      )\n      ctx.stroke()\n    }\n  }\n\n  const getAudioData = useCallback(() => {\n    if (!analyser || !canvasRef.current) {\n      raf = requestAnimationFrame(getAudioData)\n      return\n    }\n\n    const ctx = canvasRef.current.getContext('2d')\n\n    if (!ctx) {\n      raf = requestAnimationFrame(getAudioData)\n      return\n    }\n\n    const freqData = new Uint8Array(analyser.frequencyBinCount)\n    analyser.getByteFrequencyData(freqData)\n\n    const imageData = ctx.getImageData(1, 0, canvasRef.current.width - 1, canvasRef.current.height)\n    ctx.putImageData(imageData, 0, 0)\n\n    drawCanvas(freqData, ctx, canvasRef.current)\n\n    raf = requestAnimationFrame(getAudioData)\n  }, [analyser])\n\n  useEffect(() => {\n    if (!analyser || !canvasRef.current) return\n    getAudioData()\n\n    return () => {\n      cancelAnimationFrame(raf)\n    }\n  }, [analyser, getAudioData, canvasRef])\n\n  return (\n    <Box p={4}>\n      <canvas ref={canvasRef} width={800} height={500} />\n    </Box>\n  )\n}\n\nexport default Audio\n","import {\n  SentimentAnalysis,\n  FaceMesh,\n  Home,\n  ImageDetection,\n  TransferLearning,\n  Webcam,\n  Audio,\n  HandPose,\n} from '../pages'\n\nconst Routes = [\n  {\n    path: '/',\n    component: Home,\n    name: 'Home',\n    exact: true,\n  },\n  {\n    path: '/tensorflow-study/image-detection',\n    component: ImageDetection,\n    name: 'Random Image Detection',\n  },\n  {\n    path: '/tensorflow-study/webcam',\n    component: Webcam,\n    name: 'Webcam',\n  },\n  {\n    path: '/tensorflow-study/transfer-learning',\n    component: TransferLearning,\n    name: 'Transfer Learning',\n  },\n  {\n    path: '/tensorflow-study/sentiment',\n    component: SentimentAnalysis,\n    name: 'Sentiment Analysis',\n  },\n  {\n    path: '/tensorflow-study/facemesh',\n    component: FaceMesh,\n    name: 'Face Mesh',\n  },\n  {\n    path: '/tensorflow-study/audio',\n    component: Audio,\n    name: 'Audio',\n  },\n  {\n    path: '/tensorflow-study/hand-pose',\n    component: HandPose,\n    name: 'Hand Tracking',\n  },\n]\n\nexport default Routes\n","import React, { RefAttributes, PropsWithoutRef, ForwardRefExoticComponent } from 'react'\nimport { Link as RouterLink, LinkProps as RouterLinkProps } from 'react-router-dom'\nimport { NavLink as ThemeUILink, NavLinkProps as ThemedUILinkProps } from 'theme-ui'\n\n/**\n * @see https://www.reactjunkie.com/theme-ui-react-router-link-typescript\n */\n\ntype ForwardRef<T, P> = ForwardRefExoticComponent<PropsWithoutRef<P> & RefAttributes<T>>\n\nexport type CustomLinkCombinedProps = ThemedUILinkProps & RouterLinkProps<{}>\nexport const CustomLink: ForwardRef<HTMLAnchorElement, CustomLinkCombinedProps> = ThemeUILink\n\nconst Link = ({ children, ...props }: CustomLinkCombinedProps) => {\n  return (\n    <CustomLink as={RouterLink} {...props}>\n      {children}\n    </CustomLink>\n  )\n}\n\nexport default Link\n","import { useLocation } from 'react-router-dom'\nimport { Flex } from 'theme-ui'\nimport { Link } from '..'\nimport Routes from '../../routes'\n\nconst Nav = () => {\n  const location = useLocation()\n\n  return (\n    <Flex as=\"nav\" sx={{ px: 3, py: 4, bg: 'muted' }}>\n      {Routes.map(r => (\n        <Link key={r.name} variant={location.pathname === r.path ? 'navActive' : 'nav'} to={r.path}>\n          {r.name}\n        </Link>\n      ))}\n    </Flex>\n  )\n}\n\nexport default Nav\n","import React, { useEffect, useState } from 'react'\nimport * as mobilenet from '@tensorflow-models/mobilenet'\nimport * as knn from '@tensorflow-models/knn-classifier'\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\nimport { Box } from 'theme-ui'\nimport Routes from './routes'\nimport { Nav } from './components'\n\nconst App = () => {\n  const [modelMobilenet, setModelMobilenet] = useState<mobilenet.MobileNet>()\n  const [modelKnn, setModelKnn] = useState<knn.KNNClassifier>()\n  const [error, setError] = useState<boolean>(false)\n  const loadModels = async () => {\n    try {\n      setModelMobilenet(await mobilenet.load())\n      setModelKnn(await knn.create())\n    } catch (e) {\n      console.log(e)\n      setError(true)\n    }\n  }\n\n  useEffect(() => {\n    loadModels()\n  }, [])\n\n  return (\n    <Router>\n      <Nav />\n      {error ? (\n        <Box p={3}>Error loading Model</Box>\n      ) : (\n        <>\n          {modelMobilenet && modelKnn ? (\n            <Switch>\n              {Routes.map(({ exact, path, component: Component }, index) => (\n                <Route exact={exact} key={index} path={path}>\n                  <Component modelMobilenet={modelMobilenet} modelKnn={modelKnn} />\n                </Route>\n              ))}\n            </Switch>\n          ) : (\n            <Box p={3}>Loading Models</Box>\n          )}\n        </>\n      )}\n    </Router>\n  )\n}\n\nexport default App\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { Theme } from 'theme-ui'\n\nconst theme: Theme = {\n  space: [0, 4, 8, 16, 32, 64, 128, 256, 512],\n  fonts: {\n    body:\n      'system-ui, -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, \"Helvetica Neue\", sans-serif',\n    heading: 'inherit',\n    monospace: 'Menlo, monospace',\n  },\n  fontSizes: [12, 14, 16, 20, 24, 32, 48, 64, 96],\n  fontWeights: {\n    body: 400,\n    heading: 700,\n    bold: 700,\n  },\n  lineHeights: {\n    body: 1.5,\n    heading: 1.125,\n  },\n  buttons: {\n    primary: {\n      cursor: 'pointer',\n    },\n    secondary: {\n      bg: 'secondary',\n      color: 'white',\n      cursor: 'pointer',\n    },\n  },\n  colors: {\n    text: '#000',\n    background: '#fff',\n    primary: '#07c',\n    secondary: '#30c',\n    muted: '#f6f6f6',\n  },\n  links: {\n    nav: {\n      mr: 4,\n    },\n    navActive: {\n      variant: 'links.nav',\n      color: 'secondary',\n      pointerEvents: 'none',\n    },\n  },\n  styles: {\n    root: {\n      fontFamily: 'body',\n      lineHeight: 'body',\n      fontWeight: 'body',\n    },\n    h1: {\n      color: 'text',\n      fontFamily: 'heading',\n      lineHeight: 'heading',\n      fontWeight: 'heading',\n      fontSize: 5,\n    },\n    h2: {\n      color: 'text',\n      fontFamily: 'heading',\n      lineHeight: 'heading',\n      fontWeight: 'heading',\n      fontSize: 4,\n    },\n    h3: {\n      color: 'text',\n      fontFamily: 'heading',\n      lineHeight: 'heading',\n      fontWeight: 'heading',\n      fontSize: 3,\n    },\n    h4: {\n      color: 'text',\n      fontFamily: 'heading',\n      lineHeight: 'heading',\n      fontWeight: 'heading',\n      fontSize: 2,\n    },\n    h5: {\n      color: 'text',\n      fontFamily: 'heading',\n      lineHeight: 'heading',\n      fontWeight: 'heading',\n      fontSize: 1,\n    },\n    h6: {\n      color: 'text',\n      fontFamily: 'heading',\n      lineHeight: 'heading',\n      fontWeight: 'heading',\n      fontSize: 0,\n    },\n    p: {\n      color: 'text',\n      fontFamily: 'body',\n      fontWeight: 'body',\n      lineHeight: 'body',\n    },\n    a: {\n      color: 'primary',\n    },\n    pre: {\n      fontFamily: 'monospace',\n      overflowX: 'auto',\n      code: {\n        color: 'inherit',\n      },\n    },\n    code: {\n      fontFamily: 'monospace',\n      fontSize: 'inherit',\n    },\n    table: {\n      width: '100%',\n      borderCollapse: 'separate',\n      borderSpacing: 0,\n    },\n    th: {\n      textAlign: 'left',\n      borderBottomStyle: 'solid',\n    },\n    td: {\n      textAlign: 'left',\n      borderBottomStyle: 'solid',\n    },\n    img: {\n      maxWidth: '100%',\n    },\n  },\n}\n\nexport default theme\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { ThemeProvider } from 'theme-ui'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\nimport theme from './theme'\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n      <App />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}